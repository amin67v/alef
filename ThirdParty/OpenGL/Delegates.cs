/* 
 * The MIT License (MIT)
 * https://opensource.org/licenses/MIT
 *
 * Copyright (c) 2006 - 2010 The Open Toolkit library.
 * Copyright (c) 2010 - 2017 Giawa (http://www.giawa.com) 
 */

using System;
using System.Text;
using System.Runtime.InteropServices;

#pragma warning disable 0649

public static partial class OpenGL
{
    public unsafe static class Delegates
    {
        public delegate void ActiveShaderProgram(uint pipeline, uint program);
        public delegate void ActiveTexture(TextureUnit texture);
        public delegate void AttachShader(uint program, uint shader);
        public delegate void BeginConditionalRender(uint id, ConditionalRenderType mode);
        public delegate void EndConditionalRender();
        public delegate void BeginQuery(QueryTarget target, uint id);
        public delegate void EndQuery(QueryTarget target);
        public delegate void BeginQueryIndexed(uint target, uint index, uint id);
        public delegate void EndQueryIndexed(QueryTarget target, uint index);
        public delegate void BeginTransformFeedback(BeginFeedbackMode primitiveMode);
        public delegate void EndTransformFeedback();
        public delegate void BindAttribLocation(uint program, uint index, string name);
        public delegate void BindBuffer(BufferTarget target, uint buffer);
        public delegate void BindBufferBase(BufferTarget target, uint index, uint buffer);
        public delegate void BindBufferRange(BufferTarget target, uint index, uint buffer, IntPtr offset, IntPtr size);
        public delegate void BindBuffersBase(BufferTarget target, uint first, int count, uint[] buffers);
        public delegate void BindBuffersRange(BufferTarget target, uint first, int count, uint[] buffers, IntPtr[] offsets, IntPtr[] sizes);
        public delegate void BindFragDataLocation(uint program, uint colorNumber, string name);
        public delegate void BindFragDataLocationIndexed(uint program, uint colorNumber, uint index, string name);
        public delegate void BindFramebuffer(FramebufferTarget target, uint framebuffer);
        public delegate void BindImageTexture(uint unit, uint texture, int level, bool layered, int layer, BufferAccess access, PixelInternalFormat format);
        public delegate void BindImageTextures(uint first, int count, uint[] textures);
        public delegate void BindProgramPipeline(uint pipeline);
        public delegate void BindRenderbuffer(RenderbufferTarget target, uint renderbuffer);
        public delegate void BindSampler(uint unit, uint sampler);
        public delegate void BindSamplers(uint first, int count, uint[] samplers);
        public delegate void BindTexture(TextureTarget target, uint texture);
        public delegate void BindTextures(uint first, int count, uint[] textures);
        public delegate void BindTextureUnit(uint unit, uint texture);
        public delegate void BindTransformFeedback(NvTransformFeedback2 target, uint id);
        public delegate void BindVertexArray(uint array);
        public delegate void BindVertexBuffer(uint bindingindex, uint buffer, IntPtr offset, IntPtr stride);
        public delegate void VertexArrayVertexBuffer(uint vaobj, uint bindingindex, uint buffer, IntPtr offset, int stride);
        public delegate void BindVertexBuffers(uint first, int count, uint[] buffers, IntPtr[] offsets, int[] strides);
        public delegate void VertexArrayVertexBuffers(uint vaobj, uint first, int count, uint[] buffers, IntPtr[] offsets, int[] strides);
        public delegate void BlendColor(float red, float green, float blue, float alpha);
        public delegate void BlendEquation(BlendEquationMode mode);
        public delegate void BlendEquationi(uint buf, BlendEquationMode mode);
        public delegate void BlendEquationSeparate(BlendEquationMode modeRGB, BlendEquationMode modeAlpha);
        public delegate void BlendEquationSeparatei(uint buf, BlendEquationMode modeRGB, BlendEquationMode modeAlpha);
        public delegate void BlendFunc(BlendingFactorSrc sfactor, BlendingFactorDest dfactor);
        public delegate void BlendFunci(uint buf, BlendingFactorSrc sfactor, BlendingFactorDest dfactor);
        public delegate void BlendFuncSeparate(BlendingFactorSrc srcRGB, BlendingFactorDest dstRGB, BlendingFactorSrc srcAlpha, BlendingFactorDest dstAlpha);
        public delegate void BlendFuncSeparatei(uint buf, BlendingFactorSrc srcRGB, BlendingFactorDest dstRGB, BlendingFactorSrc srcAlpha, BlendingFactorDest dstAlpha);
        public delegate void BlitFramebuffer(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, ClearBufferMask mask, BlitFramebufferFilter filter);
        public delegate void BlitNamedFramebuffer(uint readFramebuffer, uint drawFramebuffer, int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, ClearBufferMask mask, BlitFramebufferFilter filter);
        public delegate void BufferData(BufferTarget target, int size, IntPtr data, BufferUsageHint usage);
        public delegate void NamedBufferData(uint buffer, int size, IntPtr data, BufferUsageHint usage);
        public delegate void BufferStorage(BufferTarget target, IntPtr size, IntPtr data, uint flags);
        public delegate void NamedBufferStorage(uint buffer, int size, IntPtr data, uint flags);
        public delegate void BufferSubData(BufferTarget target, IntPtr offset, IntPtr size, IntPtr data);
        public delegate void NamedBufferSubData(uint buffer, IntPtr offset, int size, IntPtr data);
        public delegate FramebufferErrorCode CheckFramebufferStatus(FramebufferTarget target);
        public delegate FramebufferErrorCode CheckNamedFramebufferStatus(uint framebuffer, FramebufferTarget target);
        public delegate void ClampColor(ClampColorTarget target, ClampColorMode clamp);
        public delegate void Clear(ClearBufferMask mask);
        public delegate void ClearBufferiv(ClearBuffer buffer, int drawbuffer, int* value);
        public delegate void ClearBufferuiv(ClearBuffer buffer, int drawbuffer, uint* value);
        public delegate void ClearBufferfv(ClearBuffer buffer, int drawbuffer, float* value);
        public delegate void ClearBufferfi(ClearBuffer buffer, int drawbuffer, float depth, int stencil);
        public delegate void ClearNamedFramebufferiv(uint framebuffer, ClearBuffer buffer, int drawbuffer, int[] value);
        public delegate void ClearNamedFramebufferuiv(uint framebuffer, ClearBuffer buffer, int drawbuffer, uint[] value);
        public delegate void ClearNamedFramebufferfv(uint framebuffer, ClearBuffer buffer, int drawbuffer, float[] value);
        public delegate void ClearNamedFramebufferfi(uint framebuffer, ClearBuffer buffer, float depth, int stencil);
        public delegate void ClearBufferData(BufferTarget target, SizedInternalFormat internalFormat, PixelInternalFormat format, PixelType type, IntPtr data);
        public delegate void ClearNamedBufferData(uint buffer, SizedInternalFormat internalFormat, PixelInternalFormat format, PixelType type, IntPtr data);
        public delegate void ClearBufferSubData(BufferTarget target, SizedInternalFormat internalFormat, IntPtr offset, IntPtr size, PixelInternalFormat format, PixelType type, IntPtr data);
        public delegate void ClearNamedBufferSubData(uint buffer, SizedInternalFormat internalFormat, IntPtr offset, int size, PixelInternalFormat format, PixelType type, IntPtr data);
        public delegate void ClearColor(float red, float green, float blue, float alpha);
        public delegate void ClearDepth(double depth);
        public delegate void ClearDepthf(float depth);
        public delegate void ClearStencil(int s);
        public delegate void ClearTexImage(uint texture, int level, PixelInternalFormat format, PixelType type, IntPtr data);
        public delegate void ClearTexSubImage(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelInternalFormat format, PixelType type, IntPtr data);
        public delegate ArbSync ClientWaitSync(IntPtr sync, uint flags, ulong timeout);
        public delegate void ClipControl(ClipControlOrigin origin, ClipControlDepth depth);
        public delegate void ColorMask(bool red, bool green, bool blue, bool alpha);
        public delegate void ColorMaski(uint buf, bool red, bool green, bool blue, bool alpha);
        public delegate void CompileShader(uint shader);
        public delegate void CompressedTexImage1D(TextureTarget target, int level, PixelInternalFormat internalFormat, int width, int border, int imageSize, IntPtr data);
        public delegate void CompressedTexImage2D(TextureTarget target, int level, PixelInternalFormat internalFormat, int width, int height, int border, int imageSize, IntPtr data);
        public delegate void CompressedTexImage3D(TextureTarget target, int level, PixelInternalFormat internalFormat, int width, int height, int depth, int border, int imageSize, IntPtr data);
        public delegate void CompressedTexSubImage1D(TextureTarget target, int level, int xoffset, int width, PixelFormat format, int imageSize, IntPtr data);
        public delegate void CompressedTextureSubImage1D(uint texture, int level, int xoffset, int width, PixelInternalFormat format, int imageSize, IntPtr data);
        public delegate void CompressedTexSubImage2D(TextureTarget target, int level, int xoffset, int yoffset, int width, int height, PixelFormat format, int imageSize, IntPtr data);
        public delegate void CompressedTextureSubImage2D(uint texture, int level, int xoffset, int yoffset, int width, int height, PixelInternalFormat format, int imageSize, IntPtr data);
        public delegate void CompressedTexSubImage3D(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, int imageSize, IntPtr data);
        public delegate void CompressedTextureSubImage3D(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelInternalFormat format, int imageSize, IntPtr data);
        public delegate void CopyBufferSubData(BufferTarget readTarget, BufferTarget writeTarget, IntPtr readOffset, IntPtr writeOffset, IntPtr size);
        public delegate void CopyNamedBufferSubData(uint readBuffer, uint writeBuffer, IntPtr readOffset, IntPtr writeOffset, int size);
        public delegate void CopyImageSubData(uint srcName, BufferTarget srcTarget, int srcLevel, int srcX, int srcY, int srcZ, uint dstName, BufferTarget dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int srcWidth, int srcHeight, int srcDepth);
        public delegate void CopyTexImage1D(TextureTarget target, int level, PixelInternalFormat internalFormat, int x, int y, int width, int border);
        public delegate void CopyTexImage2D(TextureTarget target, int level, PixelInternalFormat internalFormat, int x, int y, int width, int height, int border);
        public delegate void CopyTexSubImage1D(TextureTarget target, int level, int xoffset, int x, int y, int width);
        public delegate void CopyTextureSubImage1D(uint texture, int level, int xoffset, int x, int y, int width);
        public delegate void CopyTexSubImage2D(TextureTarget target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
        public delegate void CopyTextureSubImage2D(uint texture, int level, int xoffset, int yoffset, int x, int y, int width, int height);
        public delegate void CopyTexSubImage3D(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
        public delegate void CopyTextureSubImage3D(uint texture, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
        public delegate void CreateBuffers(int n, uint[] buffers);
        public delegate void CreateFramebuffers(int n, uint[] ids);
        public delegate uint CreateProgram();
        public delegate void CreateProgramPipelines(int n, uint[] pipelines);
        public delegate void CreateQueries(QueryTarget target, int n, uint[] ids);
        public delegate void CreateRenderbuffers(int n, uint[] renderbuffers);
        public delegate void CreateSamplers(int n, uint[] samplers);
        public delegate uint CreateShader(ShaderType shaderType);
        public delegate uint CreateShaderProgramv(ShaderType type, int count, string strings);
        public delegate void CreateTextures(TextureTarget target, int n, uint[] textures);
        public delegate void CreateTransformFeedbacks(int n, uint[] ids);
        public delegate void CreateVertexArrays(int n, uint[] arrays);
        public delegate void CullFace(CullFaceMode mode);
        public delegate void DeleteBuffers(int n, uint[] buffers);
        public delegate void DeleteFramebuffers(int n, uint[] framebuffers);
        public delegate void DeleteProgram(uint program);
        public delegate void DeleteProgramPipelines(int n, uint[] pipelines);
        public delegate void DeleteQueries(int n, uint[] ids);
        public delegate void DeleteRenderbuffers(int n, uint[] renderbuffers);
        public delegate void DeleteSamplers(int n, uint[] samplers);
        public delegate void DeleteShader(uint shader);
        public delegate void DeleteSync(IntPtr sync);
        public delegate void DeleteTextures(int n, uint[] textures);
        public delegate void DeleteTransformFeedbacks(int n, uint[] ids);
        public delegate void DeleteVertexArrays(int n, uint[] arrays);
        public delegate void DepthFunc(DepthFunction func);
        public delegate void DepthMask(bool flag);
        public delegate void DepthRange(double nearVal, double farVal);
        public delegate void DepthRangef(float nearVal, float farVal);
        public delegate void DepthRangeArrayv(uint first, int count, double[] v);
        public delegate void DepthRangeIndexed(uint index, double nearVal, double farVal);
        public delegate void DetachShader(uint program, uint shader);
        public delegate void DispatchCompute(uint num_groups_x, uint num_groups_y, uint num_groups_z);
        public delegate void DispatchComputeIndirect(IntPtr indirect);
        public delegate void DrawArrays(BeginMode mode, int first, int count);
        public delegate void DrawArraysIndirect(BeginMode mode, IntPtr indirect);
        public delegate void DrawArraysInstanced(BeginMode mode, int first, int count, int primcount);
        public delegate void DrawArraysInstancedBaseInstance(BeginMode mode, int first, int count, int primcount, uint baseinstance);
        public delegate void DrawBuffer(DrawBufferMode buf);
        public delegate void NamedFramebufferDrawBuffer(uint framebuffer, DrawBufferMode buf);
        public delegate void DrawBuffers(int n, DrawBuffersEnum[] bufs);
        public delegate void NamedFramebufferDrawBuffers(uint framebuffer, int n, DrawBufferMode[] bufs);
        public delegate void DrawElements(BeginMode mode, int count, DrawElementsType type, IntPtr indices);
        public delegate void DrawElementsBaseVertex(BeginMode mode, int count, DrawElementsType type, IntPtr indices, int basevertex);
        public delegate void DrawElementsIndirect(BeginMode mode, DrawElementsType type, IntPtr indirect);
        public delegate void DrawElementsInstanced(BeginMode mode, int count, DrawElementsType type, IntPtr indices, int primcount);
        public delegate void DrawElementsInstancedBaseInstance(BeginMode mode, int count, DrawElementsType type, IntPtr indices, int primcount, uint baseinstance);
        public delegate void DrawElementsInstancedBaseVertex(BeginMode mode, int count, DrawElementsType type, IntPtr indices, int primcount, int basevertex);
        public delegate void DrawElementsInstancedBaseVertexBaseInstance(BeginMode mode, int count, DrawElementsType type, IntPtr indices, int primcount, int basevertex, uint baseinstance);
        public delegate void DrawRangeElements(BeginMode mode, uint start, uint end, int count, DrawElementsType type, IntPtr indices);
        public delegate void DrawRangeElementsBaseVertex(BeginMode mode, uint start, uint end, int count, DrawElementsType type, IntPtr indices, int basevertex);
        public delegate void DrawTransformFeedback(NvTransformFeedback2 mode, uint id);
        public delegate void DrawTransformFeedbackInstanced(BeginMode mode, uint id, int primcount);
        public delegate void DrawTransformFeedbackStream(NvTransformFeedback2 mode, uint id, uint stream);
        public delegate void DrawTransformFeedbackStreamInstanced(BeginMode mode, uint id, uint stream, int primcount);
        public delegate void Enable(EnableCap cap);
        public delegate void Disable(EnableCap cap);
        public delegate void Enablei(EnableCap cap, uint index);
        public delegate void Disablei(EnableCap cap, uint index);
        public delegate void EnableVertexAttribArray(uint index);
        public delegate void DisableVertexAttribArray(uint index);
        public delegate void EnableVertexArrayAttrib(uint vaobj, uint index);
        public delegate void DisableVertexArrayAttrib(uint vaobj, uint index);
        public delegate IntPtr FenceSync(ArbSync condition, uint flags);
        public delegate void Finish();
        public delegate void Flush();
        public delegate void FlushMappedBufferRange(BufferTarget target, IntPtr offset, IntPtr length);
        public delegate void FlushMappedNamedBufferRange(uint buffer, IntPtr offset, int length);
        public delegate void FramebufferParameteri(FramebufferTarget target, FramebufferPName pname, int param);
        public delegate void NamedFramebufferParameteri(uint framebuffer, FramebufferPName pname, int param);
        public delegate void FramebufferRenderbuffer(FramebufferTarget target, FramebufferAttachment attachment, RenderbufferTarget renderbuffertarget, uint renderbuffer);
        public delegate void NamedFramebufferRenderbuffer(uint framebuffer, FramebufferAttachment attachment, RenderbufferTarget renderbuffertarget, uint renderbuffer);
        public delegate void FramebufferTexture(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int level);
        public delegate void FramebufferTexture1D(FramebufferTarget target, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level);
        public delegate void FramebufferTexture2D(FramebufferTarget target, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level);
        public delegate void FramebufferTexture3D(FramebufferTarget target, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level, int layer);
        public delegate void NamedFramebufferTexture(uint framebuffer, FramebufferAttachment attachment, uint texture, int level);
        public delegate void FramebufferTextureLayer(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int level, int layer);
        public delegate void NamedFramebufferTextureLayer(uint framebuffer, FramebufferAttachment attachment, uint texture, int level, int layer);
        public delegate void FrontFace(FrontFaceDirection mode);
        public delegate void GenBuffers(int n, [Out] uint[] buffers);
        public delegate void GenerateMipmap(TextureTarget target);
        public delegate void GenerateTextureMipmap(uint texture);
        public delegate void GenFramebuffers(int n, [Out] uint[] ids);
        public delegate void GenProgramPipelines(int n, [Out] uint[] pipelines);
        public delegate void GenQueries(int n, [Out] uint[] ids);
        public delegate void GenRenderbuffers(int n, [Out] uint[] renderbuffers);
        public delegate void GenSamplers(int n, [Out] uint[] samplers);
        public delegate void GenTextures(int n, [Out] uint[] textures);
        public delegate void GenTransformFeedbacks(int n, [Out] uint[] ids);
        public delegate void GenVertexArrays(int n, [Out] uint[] arrays);
        public delegate void Getboolv(GetPName pname, [Out] bool[] data);
        public delegate void Getdoublev(GetPName pname, [Out] double[] data);
        public delegate void GetFloatv(GetPName pname, [Out] float[] data);
        public delegate void GetIntegerv(GetPName pname, [Out] int[] data);
        public delegate void GetInteger64v(ArbSync pname, [Out] long[] data);
        public delegate void Getbooli_v(GetPName target, uint index, [Out] bool[] data);
        public delegate void GetIntegeri_v(GetPName target, uint index, [Out] int[] data);
        public delegate void GetFloati_v(GetPName target, uint index, [Out] float[] data);
        public delegate void Getdoublei_v(GetPName target, uint index, [Out] double[] data);
        public delegate void GetInteger64i_v(GetPName target, uint index, [Out] long[] data);
        public delegate void GetActiveAtomicCounterBufferiv(uint program, uint bufferIndex, AtomicCounterParameterName pname, [Out] int[] @params);
        public delegate void GetActiveAttrib(uint program, uint index, int bufSize, [Out] int[] length, [Out] int[] size, [Out] ActiveAttribType[] type, [Out] StringBuilder name);
        public delegate void GetActiveSubroutineName(uint program, ShaderType shadertype, uint index, int bufsize, [Out] int[] length, [Out] StringBuilder name);
        public delegate void GetActiveSubroutineUniformiv(uint program, ShaderType shadertype, uint index, SubroutineParameterName pname, [Out] int[] values);
        public delegate void GetActiveSubroutineUniformName(uint program, ShaderType shadertype, uint index, int bufsize, [Out] int[] length, [Out] StringBuilder name);
        public delegate void GetActiveUniform(uint program, uint index, int bufSize, [Out] int[] length, [Out] int[] size, [Out] ActiveUniformType[] type, [Out] StringBuilder name);
        public delegate void GetActiveUniformBlockiv(uint program, uint uniformBlockIndex, ActiveUniformBlockParameter pname, [Out] int[] @params);
        public delegate void GetActiveUniformBlockName(uint program, uint uniformBlockIndex, int bufSize, [Out] int[] length, [Out] StringBuilder uniformBlockName);
        public delegate void GetActiveUniformName(uint program, uint uniformIndex, int bufSize, [Out] int[] length, [Out] StringBuilder uniformName);
        public delegate void GetActiveUniformsiv(uint program, int uniformCount, [Out] uint[] uniformIndices, ActiveUniformType pname, [Out] int[] @params);
        public delegate void GetAttachedShaders(uint program, int maxCount, [Out] int[] count, [Out] uint[] shaders);
        public delegate int GetAttribLocation(uint program, string name);
        public delegate void GetBufferParameteriv(BufferTarget target, BufferParameterName value, [Out] int[] data);
        public delegate void GetBufferParameteri64v(BufferTarget target, BufferParameterName value, [Out] long[] data);
        public delegate void GetNamedBufferParameteriv(uint buffer, BufferParameterName pname, [Out] int[] @params);
        public delegate void GetNamedBufferParameteri64v(uint buffer, BufferParameterName pname, [Out] long[] @params);
        public delegate void GetBufferPointerv(BufferTarget target, BufferPointer pname, [Out] IntPtr @params);
        public delegate void GetNamedBufferPointerv(uint buffer, BufferPointer pname, [Out] IntPtr @params);
        public delegate void GetBufferSubData(BufferTarget target, IntPtr offset, IntPtr size, [Out] IntPtr data);
        public delegate void GetNamedBufferSubData(uint buffer, IntPtr offset, int size, [Out] IntPtr data);
        public delegate void GetCompressedTexImage(TextureTarget target, int level, [Out] IntPtr pixels);
        public delegate void GetnCompressedTexImage(TextureTarget target, int level, int bufSize, [Out] IntPtr pixels);
        public delegate void GetCompressedTextureImage(uint texture, int level, int bufSize, [Out] IntPtr pixels);
        public delegate void GetCompressedTextureSubImage(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int bufSize, [Out] IntPtr pixels);
        public delegate ErrorCode GetError();
        public delegate int GetFragDataIndex(uint program, string name);
        public delegate int GetFragDataLocation(uint program, string name);
        public delegate void GetFramebufferAttachmentParameteriv(FramebufferTarget target, FramebufferAttachment attachment, FramebufferParameterName pname, [Out] int[] @params);
        public delegate void GetNamedFramebufferAttachmentParameteriv(uint framebuffer, FramebufferAttachment attachment, FramebufferParameterName pname, [Out] int[] @params);
        public delegate void GetFramebufferParameteriv(FramebufferTarget target, FramebufferPName pname, [Out] int[] @params);
        public delegate void GetNamedFramebufferParameteriv(uint framebuffer, FramebufferPName pname, [Out] int[] param);
        public delegate GraphicResetStatus GetGraphicsResetStatus();
        public delegate void GetInternalformativ(TextureTarget target, PixelInternalFormat internalFormat, GetPName pname, int bufSize, [Out] int[] @params);
        public delegate void GetInternalformati64v(TextureTarget target, PixelInternalFormat internalFormat, GetPName pname, int bufSize, [Out] long[] @params);
        public delegate void GetMultisamplefv(GetMultisamplePName pname, uint index, [Out] float[] val);
        public delegate void GetObjectLabel(ObjectLabelEnum identifier, uint name, int bifSize, [Out] int[] length, [Out] StringBuilder label);
        public delegate void GetObjectPtrLabel([Out] IntPtr ptr, int bifSize, [Out] int[] length, [Out] StringBuilder label);
        public delegate void GetPointerv(GetPointerParameter pname, [Out] IntPtr @params);
        public delegate void GetProgramiv(uint program, ProgramParameter pname, [Out] int[] @params);
        public delegate void GetProgramBinary(uint program, int bufsize, [Out] int[] length, [Out] int[] binaryFormat, [Out] IntPtr binary);
        public delegate void GetProgramInfoLog(uint program, int maxLength, [Out] int[] length, [Out] StringBuilder infoLog);
        public delegate void GetProgramInterfaceiv(uint program, ProgramInterface programInterface, ProgramInterfaceParameterName pname, [Out] int[] @params);
        public delegate void GetProgramPipelineiv(uint pipeline, int pname, [Out] int[] @params);
        public delegate void GetProgramPipelineInfoLog(uint pipeline, int bufSize, [Out] int[] length, [Out] StringBuilder infoLog);
        public delegate void GetProgramResourceiv(uint program, ProgramInterface programInterface, uint index, int propCount, [Out] ProgramResourceParameterName[] props, int bufSize, [Out] int[] length, [Out] int[] @params);
        public delegate uint GetProgramResourceIndex(uint program, ProgramInterface programInterface, string name);
        public delegate int GetProgramResourceLocation(uint program, ProgramInterface programInterface, string name);
        public delegate int GetProgramResourceLocationIndex(uint program, ProgramInterface programInterface, string name);
        public delegate void GetProgramResourceName(uint program, ProgramInterface programInterface, uint index, int bufSize, [Out] int[] length, [Out] StringBuilder name);
        public delegate void GetProgramStageiv(uint program, ShaderType shadertype, ProgramStageParameterName pname, [Out] int[] values);
        public delegate void GetQueryIndexediv(QueryTarget target, uint index, GetQueryParam pname, [Out] int[] @params);
        public delegate void GetQueryiv(QueryTarget target, GetQueryParam pname, [Out] int[] @params);
        public delegate void GetQueryObjectiv(uint id, GetQueryObjectParam pname, [Out] int[] @params);
        public delegate void GetQueryObjectuiv(uint id, GetQueryObjectParam pname, [Out] uint[] @params);
        public delegate void GetQueryObjecti64v(uint id, GetQueryObjectParam pname, [Out] long[] @params);
        public delegate void GetQueryObjectui64v(uint id, GetQueryObjectParam pname, [Out] ulong[] @params);
        public delegate void GetRenderbufferParameteriv(RenderbufferTarget target, RenderbufferParameterName pname, [Out] int[] @params);
        public delegate void GetNamedRenderbufferParameteriv(uint renderbuffer, RenderbufferParameterName pname, [Out] int[] @params);
        public delegate void GetSamplerParameterfv(uint sampler, int pname, [Out] float[] @params);
        public delegate void GetSamplerParameteriv(uint sampler, int pname, [Out] int[] @params);
        public delegate void GetSamplerParameterIiv(uint sampler, TextureParameterName pname, [Out] int[] @params);
        public delegate void GetSamplerParameterIuiv(uint sampler, TextureParameterName pname, [Out] uint[] @params);
        public delegate void GetShaderiv(uint shader, ShaderParameter pname, [Out] int[] @params);
        public delegate void GetShaderInfoLog(uint shader, int maxLength, [Out] int[] length, [Out] StringBuilder infoLog);
        public delegate void GetShaderPrecisionFormat(ShaderType shaderType, int precisionType, [Out] int[] range, [Out] int[] precision);
        public delegate void GetShaderSource(uint shader, int bufSize, [Out] int[] length, [Out] StringBuilder source);
        public delegate IntPtr GetString(StringName name);
        public delegate IntPtr GetStringi(StringName name, uint index);
        public delegate uint GetSubroutineIndex(uint program, ShaderType shadertype, string name);
        public delegate int GetSubroutineUniformLocation(uint program, ShaderType shadertype, string name);
        public delegate void GetSynciv(IntPtr sync, ArbSync pname, int bufSize, [Out] int[] length, [Out] int[] values);
        public delegate void GetTexImage(TextureTarget target, int level, PixelFormat format, PixelType type, [Out] IntPtr pixels);
        public delegate void GetnTexImage(TextureTarget target, int level, PixelFormat format, PixelType type, int bufSize, [Out] IntPtr pixels);
        public delegate void GetTextureImage(uint texture, int level, PixelFormat format, PixelType type, int bufSize, [Out] IntPtr pixels);
        public delegate void GetTexLevelParameterfv(GetPName target, int level, GetTextureLevelParameter pname, [Out] float[] @params);
        public delegate void GetTexLevelParameteriv(GetPName target, int level, GetTextureLevelParameter pname, [Out] int[] @params);
        public delegate void GetTextureLevelParameterfv(uint texture, int level, GetTextureLevelParameter pname, [Out] float[] @params);
        public delegate void GetTextureLevelParameteriv(uint texture, int level, GetTextureLevelParameter pname, [Out] int[] @params);
        public delegate void GetTexParameterfv(TextureTarget target, GetTextureParameter pname, [Out] float[] @params);
        public delegate void GetTexParameteriv(TextureTarget target, GetTextureParameter pname, [Out] int[] @params);
        public delegate void GetTexParameterIiv(TextureTarget target, GetTextureParameter pname, [Out] int[] @params);
        public delegate void GetTexParameterIuiv(TextureTarget target, GetTextureParameter pname, [Out] uint[] @params);
        public delegate void GetTextureParameterfv(uint texture, GetTextureParameter pname, [Out] float[] @params);
        public delegate void GetTextureParameteriv(uint texture, GetTextureParameter pname, [Out] int[] @params);
        public delegate void GetTextureParameterIiv(uint texture, GetTextureParameter pname, [Out] int[] @params);
        public delegate void GetTextureParameterIuiv(uint texture, GetTextureParameter pname, [Out] uint[] @params);
        public delegate void GetTextureSubImage(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, PixelType type, int bufSize, [Out] IntPtr pixels);
        public delegate void GetTransformFeedbackiv(uint xfb, TransformFeedbackParameterName pname, [Out] int[] param);
        public delegate void GetTransformFeedbacki_v(uint xfb, TransformFeedbackParameterName pname, uint index, [Out] int[] param);
        public delegate void GetTransformFeedbacki64_v(uint xfb, TransformFeedbackParameterName pname, uint index, [Out] long[] param);
        public delegate void GetTransformFeedbackVarying(uint program, uint index, int bufSize, [Out] int[] length, [Out] int[] size, [Out] ActiveAttribType[] type, [Out] StringBuilder name);
        public delegate void GetUniformfv(uint program, int location, [Out] float[] @params);
        public delegate void GetUniformiv(uint program, int location, [Out] int[] @params);
        public delegate void GetUniformuiv(uint program, int location, [Out] uint[] @params);
        public delegate void GetUniformdv(uint program, int location, [Out] double[] @params);
        public delegate void GetnUniformfv(uint program, int location, int bufSize, [Out] float[] @params);
        public delegate void GetnUniformiv(uint program, int location, int bufSize, [Out] int[] @params);
        public delegate void GetnUniformuiv(uint program, int location, int bufSize, [Out] uint[] @params);
        public delegate void GetnUniformdv(uint program, int location, int bufSize, [Out] double[] @params);
        public delegate uint GetUniformBlockIndex(uint program, string uniformBlockName);
        public delegate void GetUniformIndices(uint program, int uniformCount, string uniformNames, [Out] uint[] uniformIndices);
        public delegate int GetUniformLocation(uint program, string name);
        public delegate void GetUniformSubroutineuiv(ShaderType shadertype, int location, [Out] uint[] values);
        public delegate void GetVertexArrayIndexed64iv(uint vaobj, uint index, VertexAttribParameter pname, [Out] long[] param);
        public delegate void GetVertexArrayIndexediv(uint vaobj, uint index, VertexAttribParameter pname, [Out] int[] param);
        public delegate void GetVertexArrayiv(uint vaobj, VertexAttribParameter pname, [Out] int[] param);
        public delegate void GetVertexAttribdv(uint index, VertexAttribParameter pname, [Out] double[] @params);
        public delegate void GetVertexAttribfv(uint index, VertexAttribParameter pname, [Out] float[] @params);
        public delegate void GetVertexAttribiv(uint index, VertexAttribParameter pname, [Out] int[] @params);
        public delegate void GetVertexAttribIiv(uint index, VertexAttribParameter pname, [Out] int[] @params);
        public delegate void GetVertexAttribIuiv(uint index, VertexAttribParameter pname, [Out] uint[] @params);
        public delegate void GetVertexAttribLdv(uint index, VertexAttribParameter pname, [Out] double[] @params);
        public delegate void GetVertexAttribPointerv(uint index, VertexAttribPointerParameter pname, [Out] IntPtr pointer);
        public delegate void Hint(HintTarget target, HintMode mode);
        public delegate void InvalidateBufferData(uint buffer);
        public delegate void InvalidateBufferSubData(uint buffer, IntPtr offset, IntPtr length);
        public delegate void InvalidateFramebuffer(FramebufferTarget target, int numAttachments, FramebufferAttachment[] attachments);
        public delegate void InvalidateNamedFramebufferData(uint framebuffer, int numAttachments, FramebufferAttachment[] attachments);
        public delegate void InvalidateSubFramebuffer(FramebufferTarget target, int numAttachments, FramebufferAttachment[] attachments, int x, int y, int width, int height);
        public delegate void InvalidateNamedFramebufferSubData(uint framebuffer, int numAttachments, FramebufferAttachment[] attachments, int x, int y, int width, int height);
        public delegate void InvalidateTexImage(uint texture, int level);
        public delegate void InvalidateTexSubImage(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth);
        public delegate bool IsBuffer(uint buffer);
        public delegate bool IsEnabled(EnableCap cap);
        public delegate bool IsEnabledi(EnableCap cap, uint index);
        public delegate bool IsFramebuffer(uint framebuffer);
        public delegate bool IsProgram(uint program);
        public delegate bool IsProgramPipeline(uint pipeline);
        public delegate bool IsQuery(uint id);
        public delegate bool IsRenderbuffer(uint renderbuffer);
        public delegate bool IsSampler(uint id);
        public delegate bool IsShader(uint shader);
        public delegate bool IsSync(IntPtr sync);
        public delegate bool IsTexture(uint texture);
        public delegate bool IsTransformFeedback(uint id);
        public delegate bool IsVertexArray(uint array);
        public delegate void LineWidth(float width);
        public delegate void LinkProgram(uint program);
        public delegate void LogicOp(LogicOpEnum opcode);
        public delegate IntPtr MapBuffer(BufferTarget target, BufferAccess access);
        public delegate IntPtr MapNamedBuffer(uint buffer, BufferAccess access);
        public delegate IntPtr MapBufferRange(BufferTarget target, IntPtr offset, IntPtr length, BufferAccessMask access);
        public delegate IntPtr MapNamedBufferRange(uint buffer, IntPtr offset, int length, uint access);
        public delegate void MemoryBarrier(uint barriers);
        public delegate void MemoryBarrierByRegion(uint barriers);
        public delegate void MinSampleShading(float value);
        public delegate void MultiDrawArrays(BeginMode mode, int[] first, int[] count, int drawcount);
        public delegate void MultiDrawArraysIndirect(BeginMode mode, IntPtr indirect, int drawcount, int stride);
        public delegate void MultiDrawElements(BeginMode mode, int[] count, DrawElementsType type, IntPtr indices, int drawcount);
        public delegate void MultiDrawElementsBaseVertex(BeginMode mode, int[] count, DrawElementsType type, IntPtr indices, int drawcount, int[] basevertex);
        public delegate void MultiDrawElementsIndirect(BeginMode mode, DrawElementsType type, IntPtr indirect, int drawcount, int stride);
        public delegate void ObjectLabel(ObjectLabelEnum identifier, uint name, int length, string label);
        public delegate void ObjectPtrLabel(IntPtr ptr, int length, string label);
        public delegate void PatchParameteri(int pname, int value);
        public delegate void PatchParameterfv(int pname, float[] values);
        public delegate void PixelStoref(PixelStoreParameter pname, float param);
        public delegate void PixelStorei(PixelStoreParameter pname, int param);
        public delegate void PointParameterf(PointParameterName pname, float param);
        public delegate void PointParameteri(PointParameterName pname, int param);
        public delegate void PointParameterfv(PointParameterName pname, float[] @params);
        public delegate void PointParameteriv(PointParameterName pname, int[] @params);
        public delegate void PointSize(float size);
        public delegate void PolygonMode(MaterialFace face, PolygonModeEnum mode);
        public delegate void PolygonOffset(float factor, float units);
        public delegate void PrimitiveRestartIndex(uint index);
        public delegate void ProgramBinary(uint program, int binaryFormat, IntPtr binary, int length);
        public delegate void ProgramParameteri(uint program, Version32 pname, int value);
        public delegate void ProgramUniform1f(uint program, int location, float v0);
        public delegate void ProgramUniform2f(uint program, int location, float v0, float v1);
        public delegate void ProgramUniform3f(uint program, int location, float v0, float v1, float v2);
        public delegate void ProgramUniform4f(uint program, int location, float v0, float v1, float v2, float v3);
        public delegate void ProgramUniform1i(uint program, int location, int v0);
        public delegate void ProgramUniform2i(uint program, int location, int v0, int v1);
        public delegate void ProgramUniform3i(uint program, int location, int v0, int v1, int v2);
        public delegate void ProgramUniform4i(uint program, int location, int v0, int v1, int v2, int v3);
        public delegate void ProgramUniform1ui(uint program, int location, uint v0);
        public delegate void ProgramUniform2ui(uint program, int location, int v0, uint v1);
        public delegate void ProgramUniform3ui(uint program, int location, int v0, int v1, uint v2);
        public delegate void ProgramUniform4ui(uint program, int location, int v0, int v1, int v2, uint v3);
        public delegate void ProgramUniform1fv(uint program, int location, int count, float* value);
        public delegate void ProgramUniform2fv(uint program, int location, int count, float* value);
        public delegate void ProgramUniform3fv(uint program, int location, int count, float* value);
        public delegate void ProgramUniform4fv(uint program, int location, int count, float* value);
        public delegate void ProgramUniform1iv(uint program, int location, int count, int* value);
        public delegate void ProgramUniform2iv(uint program, int location, int count, int* value);
        public delegate void ProgramUniform3iv(uint program, int location, int count, int* value);
        public delegate void ProgramUniform4iv(uint program, int location, int count, int* value);
        public delegate void ProgramUniform1uiv(uint program, int location, int count, uint* value);
        public delegate void ProgramUniform2uiv(uint program, int location, int count, uint* value);
        public delegate void ProgramUniform3uiv(uint program, int location, int count, uint* value);
        public delegate void ProgramUniform4uiv(uint program, int location, int count, uint* value);
        public delegate void ProgramUniformMatrix2fv(uint program, int location, int count, bool transpose, float* value);
        public delegate void ProgramUniformMatrix3fv(uint program, int location, int count, bool transpose, float* value);
        public delegate void ProgramUniformMatrix4fv(uint program, int location, int count, bool transpose, float* value);
        public delegate void ProgramUniformMatrix2x3fv(uint program, int location, int count, bool transpose, float* value);
        public delegate void ProgramUniformMatrix3x2fv(uint program, int location, int count, bool transpose, float* value);
        public delegate void ProgramUniformMatrix2x4fv(uint program, int location, int count, bool transpose, float* value);
        public delegate void ProgramUniformMatrix4x2fv(uint program, int location, int count, bool transpose, float* value);
        public delegate void ProgramUniformMatrix3x4fv(uint program, int location, int count, bool transpose, float* value);
        public delegate void ProgramUniformMatrix4x3fv(uint program, int location, int count, bool transpose, float* value);
        public delegate void ProvokingVertex(ProvokingVertexMode provokeMode);
        public delegate void QueryCounter(uint id, int target);
        public delegate void ReadBuffer(ReadBufferMode mode);
        public delegate void NamedFramebufferReadBuffer(uint framebuffer, BeginMode mode);
        public delegate void ReadPixels(int x, int y, int width, int height, PixelFormat format, PixelType type, int[] data);
        public delegate void ReadnPixels(int x, int y, int width, int height, PixelFormat format, PixelType type, int bufSize, int[] data);
        public delegate void RenderbufferStorage(RenderbufferTarget target, RenderbufferStorageEnum internalFormat, int width, int height);
        public delegate void NamedRenderbufferStorage(uint renderbuffer, RenderbufferStorageEnum internalFormat, int width, int height);
        public delegate void RenderbufferStorageMultisample(RenderbufferTarget target, int samples, RenderbufferStorageEnum internalFormat, int width, int height);
        public delegate void NamedRenderbufferStorageMultisample(uint renderbuffer, int samples, RenderbufferStorageEnum internalFormat, int width, int height);
        public delegate void SampleCoverage(float value, bool invert);
        public delegate void SampleMaski(uint maskNumber, uint mask);
        public delegate void SamplerParameterf(uint sampler, int pname, float param);
        public delegate void SamplerParameteri(uint sampler, int pname, int param);
        public delegate void SamplerParameterfv(uint sampler, int pname, float[] @params);
        public delegate void SamplerParameteriv(uint sampler, int pname, int[] @params);
        public delegate void SamplerParameterIiv(uint sampler, TextureParameterName pname, int[] @params);
        public delegate void SamplerParameterIuiv(uint sampler, TextureParameterName pname, uint[] @params);
        public delegate void Scissor(int x, int y, int width, int height);
        public delegate void ScissorArrayv(uint first, int count, int[] v);
        public delegate void ScissorIndexed(uint index, int left, int bottom, int width, int height);
        public delegate void ScissorIndexedv(uint index, int[] v);
        public delegate void ShaderBinary(int count, uint[] shaders, int binaryFormat, IntPtr binary, int length);
        public delegate void ShaderSource(uint shader, int count, string[] @string, int[] length);
        public delegate void ShaderStorageBlockBinding(uint program, uint storageBlockIndex, uint storageBlockBinding);
        public delegate void StencilFunc(StencilFunction func, int @ref, uint mask);
        public delegate void StencilFuncSeparate(StencilFace face, StencilFunction func, int @ref, uint mask);
        public delegate void StencilMask(uint mask);
        public delegate void StencilMaskSeparate(StencilFace face, uint mask);
        public delegate void StencilOp(StencilOpEnum sfail, StencilOpEnum dpfail, StencilOpEnum dppass);
        public delegate void StencilOpSeparate(StencilFace face, StencilOpEnum sfail, StencilOpEnum dpfail, StencilOpEnum dppass);
        public delegate void TexBuffer(TextureBufferTarget target, SizedInternalFormat internalFormat, uint buffer);
        public delegate void TextureBuffer(uint texture, SizedInternalFormat internalFormat, uint buffer);
        public delegate void TexBufferRange(BufferTarget target, SizedInternalFormat internalFormat, uint buffer, IntPtr offset, IntPtr size);
        public delegate void TextureBufferRange(uint texture, SizedInternalFormat internalFormat, uint buffer, IntPtr offset, int size);
        public delegate void TexImage1D(TextureTarget target, int level, PixelInternalFormat internalFormat, int width, int border, PixelFormat format, PixelType type, IntPtr data);
        public delegate void TexImage2D(TextureTarget target, int level, PixelInternalFormat internalFormat, int width, int height, int border, PixelFormat format, PixelType type, IntPtr data);
        public delegate void TexImage2DMultisample(TextureTargetMultisample target, int samples, PixelInternalFormat internalFormat, int width, int height, bool fixedsamplelocations);
        public delegate void TexImage3D(TextureTarget target, int level, PixelInternalFormat internalFormat, int width, int height, int depth, int border, PixelFormat format, PixelType type, IntPtr data);
        public delegate void TexImage3DMultisample(TextureTargetMultisample target, int samples, PixelInternalFormat internalFormat, int width, int height, int depth, bool fixedsamplelocations);
        public delegate void TexParameterf(TextureTarget target, TextureParameterName pname, float param);
        public delegate void TexParameteri(TextureTarget target, TextureParameterName pname, int param);
        public delegate void TextureParameterf(uint texture, TextureParameter pname, float param);
        public delegate void TextureParameteri(uint texture, TextureParameter pname, int param);
        public delegate void TexParameterfv(TextureTarget target, TextureParameterName pname, float[] @params);
        public delegate void TexParameteriv(TextureTarget target, TextureParameterName pname, int[] @params);
        public delegate void TexParameterIiv(TextureTarget target, TextureParameterName pname, int[] @params);
        public delegate void TexParameterIuiv(TextureTarget target, TextureParameterName pname, uint[] @params);
        public delegate void TextureParameterfv(uint texture, TextureParameter pname, float[] paramtexture);
        public delegate void TextureParameteriv(uint texture, TextureParameter pname, int[] param);
        public delegate void TextureParameterIiv(uint texture, TextureParameter pname, int[] @params);
        public delegate void TextureParameterIuiv(uint texture, TextureParameter pname, uint[] @params);
        public delegate void TexStorage1D(TextureTarget target, int levels, SizedInternalFormat internalFormat, int width);
        public delegate void TextureStorage1D(uint texture, int levels, SizedInternalFormat internalFormat, int width);
        public delegate void TexStorage2D(TextureTarget target, int levels, SizedInternalFormat internalFormat, int width, int height);
        public delegate void TextureStorage2D(uint texture, int levels, SizedInternalFormat internalFormat, int width, int height);
        public delegate void TexStorage2DMultisample(TextureTarget target, int samples, SizedInternalFormat internalFormat, int width, int height, bool fixedsamplelocations);
        public delegate void TextureStorage2DMultisample(uint texture, int samples, SizedInternalFormat internalFormat, int width, int height, bool fixedsamplelocations);
        public delegate void TexStorage3D(TextureTarget target, int levels, SizedInternalFormat internalFormat, int width, int height, int depth);
        public delegate void TextureStorage3D(uint texture, int levels, SizedInternalFormat internalFormat, int width, int height, int depth);
        public delegate void TexStorage3DMultisample(TextureTarget target, int samples, SizedInternalFormat internalFormat, int width, int height, int depth, bool fixedsamplelocations);
        public delegate void TextureStorage3DMultisample(uint texture, int samples, SizedInternalFormat internalFormat, int width, int height, int depth, bool fixedsamplelocations);
        public delegate void TexSubImage1D(TextureTarget target, int level, int xoffset, int width, PixelFormat format, PixelType type, IntPtr pixels);
        public delegate void TextureSubImage1D(uint texture, int level, int xoffset, int width, PixelFormat format, PixelType type, IntPtr pixels);
        public delegate void TexSubImage2D(TextureTarget target, int level, int xoffset, int yoffset, int width, int height, PixelFormat format, PixelType type, IntPtr pixels);
        public delegate void TextureSubImage2D(uint texture, int level, int xoffset, int yoffset, int width, int height, PixelFormat format, PixelType type, IntPtr pixels);
        public delegate void TexSubImage3D(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, PixelType type, IntPtr pixels);
        public delegate void TextureSubImage3D(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, PixelType type, IntPtr pixels);
        public delegate void TextureBarrier();
        public delegate void TextureView(uint texture, TextureTarget target, uint origtexture, PixelInternalFormat internalFormat, uint minlevel, uint numlevels, uint minlayer, uint numlayers);
        public delegate void TransformFeedbackBufferBase(uint xfb, uint index, uint buffer);
        public delegate void TransformFeedbackBufferRange(uint xfb, uint index, uint buffer, IntPtr offset, int size);
        public delegate void TransformFeedbackVaryings(uint program, int count, string[] varyings, TransformFeedbackMode bufferMode);
        public delegate void Uniform1f(int location, float v0);
        public delegate void Uniform2f(int location, float v0, float v1);
        public delegate void Uniform3f(int location, float v0, float v1, float v2);
        public delegate void Uniform4f(int location, float v0, float v1, float v2, float v3);
        public delegate void Uniform1i(int location, int v0);
        public delegate void Uniform2i(int location, int v0, int v1);
        public delegate void Uniform3i(int location, int v0, int v1, int v2);
        public delegate void Uniform4i(int location, int v0, int v1, int v2, int v3);
        public delegate void Uniform1ui(int location, uint v0);
        public delegate void Uniform2ui(int location, uint v0, uint v1);
        public delegate void Uniform3ui(int location, uint v0, uint v1, uint v2);
        public delegate void Uniform4ui(int location, uint v0, uint v1, uint v2, uint v3);
        public delegate void Uniform1fv(int location, int count, float* value);
        public delegate void Uniform2fv(int location, int count, float* value);
        public delegate void Uniform3fv(int location, int count, float* value);
        public delegate void Uniform4fv(int location, int count, float* value);
        public delegate void Uniform1iv(int location, int count, int* value);
        public delegate void Uniform2iv(int location, int count, int* value);
        public delegate void Uniform3iv(int location, int count, int* value);
        public delegate void Uniform4iv(int location, int count, int* value);
        public delegate void Uniform1uiv(int location, int count, uint* value);
        public delegate void Uniform2uiv(int location, int count, uint* value);
        public delegate void Uniform3uiv(int location, int count, uint* value);
        public delegate void Uniform4uiv(int location, int count, uint* value);
        public delegate void UniformMatrix2fv(int location, int count, bool transpose, float* value);
        public delegate void UniformMatrix3fv(int location, int count, bool transpose, float* value);
        public delegate void UniformMatrix4fv(int location, int count, bool transpose, float* value);
        public delegate void UniformMatrix2x3fv(int location, int count, bool transpose, float* value);
        public delegate void UniformMatrix3x2fv(int location, int count, bool transpose, float* value);
        public delegate void UniformMatrix2x4fv(int location, int count, bool transpose, float* value);
        public delegate void UniformMatrix4x2fv(int location, int count, bool transpose, float* value);
        public delegate void UniformMatrix3x4fv(int location, int count, bool transpose, float* value);
        public delegate void UniformMatrix4x3fv(int location, int count, bool transpose, float* value);
        public delegate void UniformBlockBinding(uint program, uint uniformBlockIndex, uint uniformBlockBinding);
        public delegate void UniformSubroutinesuiv(ShaderType shadertype, int count, uint[] indices);
        public delegate bool UnmapBuffer(BufferTarget target);
        public delegate bool UnmapNamedBuffer(uint buffer);
        public delegate void UseProgram(uint program);
        public delegate void UseProgramStages(uint pipeline, uint stages, uint program);
        public delegate void ValidateProgram(uint program);
        public delegate void ValidateProgramPipeline(uint pipeline);
        public delegate void VertexArrayElementBuffer(uint vaobj, uint buffer);
        public delegate void VertexAttrib1f(uint index, float v0);
        public delegate void VertexAttrib1s(uint index, short v0);
        public delegate void VertexAttrib1d(uint index, double v0);
        public delegate void VertexAttribI1i(uint index, int v0);
        public delegate void VertexAttribI1ui(uint index, uint v0);
        public delegate void VertexAttrib2f(uint index, float v0, float v1);
        public delegate void VertexAttrib2s(uint index, short v0, short v1);
        public delegate void VertexAttrib2d(uint index, double v0, double v1);
        public delegate void VertexAttribI2i(uint index, int v0, int v1);
        public delegate void VertexAttribI2ui(uint index, uint v0, uint v1);
        public delegate void VertexAttrib3f(uint index, float v0, float v1, float v2);
        public delegate void VertexAttrib3s(uint index, short v0, short v1, short v2);
        public delegate void VertexAttrib3d(uint index, double v0, double v1, double v2);
        public delegate void VertexAttribI3i(uint index, int v0, int v1, int v2);
        public delegate void VertexAttribI3ui(uint index, uint v0, uint v1, uint v2);
        public delegate void VertexAttrib4f(uint index, float v0, float v1, float v2, float v3);
        public delegate void VertexAttrib4s(uint index, short v0, short v1, short v2, short v3);
        public delegate void VertexAttrib4d(uint index, double v0, double v1, double v2, double v3);
        public delegate void VertexAttrib4Nub(uint index, byte v0, byte v1, byte v2, byte v3);
        public delegate void VertexAttribI4i(uint index, int v0, int v1, int v2, int v3);
        public delegate void VertexAttribI4ui(uint index, uint v0, uint v1, uint v2, uint v3);
        public delegate void VertexAttribL1d(uint index, double v0);
        public delegate void VertexAttribL2d(uint index, double v0, double v1);
        public delegate void VertexAttribL3d(uint index, double v0, double v1, double v2);
        public delegate void VertexAttribL4d(uint index, double v0, double v1, double v2, double v3);
        public delegate void VertexAttrib1fv(uint index, float[] v);
        public delegate void VertexAttrib1sv(uint index, short[] v);
        public delegate void VertexAttrib1dv(uint index, double[] v);
        public delegate void VertexAttribI1iv(uint index, int[] v);
        public delegate void VertexAttribI1uiv(uint index, uint[] v);
        public delegate void VertexAttrib2fv(uint index, float[] v);
        public delegate void VertexAttrib2sv(uint index, short[] v);
        public delegate void VertexAttrib2dv(uint index, double[] v);
        public delegate void VertexAttribI2iv(uint index, int[] v);
        public delegate void VertexAttribI2uiv(uint index, uint[] v);
        public delegate void VertexAttrib3fv(uint index, float[] v);
        public delegate void VertexAttrib3sv(uint index, short[] v);
        public delegate void VertexAttrib3dv(uint index, double[] v);
        public delegate void VertexAttribI3iv(uint index, int[] v);
        public delegate void VertexAttribI3uiv(uint index, uint[] v);
        public delegate void VertexAttrib4fv(uint index, float[] v);
        public delegate void VertexAttrib4sv(uint index, short[] v);
        public delegate void VertexAttrib4dv(uint index, double[] v);
        public delegate void VertexAttrib4iv(uint index, int[] v);
        public delegate void VertexAttrib4bv(uint index, sbyte[] v);
        public delegate void VertexAttrib4ubv(uint index, byte[] v);
        public delegate void VertexAttrib4usv(uint index, ushort[] v);
        public delegate void VertexAttrib4uiv(uint index, uint[] v);
        public delegate void VertexAttrib4Nbv(uint index, sbyte[] v);
        public delegate void VertexAttrib4Nsv(uint index, short[] v);
        public delegate void VertexAttrib4Niv(uint index, int[] v);
        public delegate void VertexAttrib4Nubv(uint index, byte[] v);
        public delegate void VertexAttrib4Nusv(uint index, ushort[] v);
        public delegate void VertexAttrib4Nuiv(uint index, uint[] v);
        public delegate void VertexAttribI4bv(uint index, sbyte[] v);
        public delegate void VertexAttribI4ubv(uint index, byte[] v);
        public delegate void VertexAttribI4sv(uint index, short[] v);
        public delegate void VertexAttribI4usv(uint index, ushort[] v);
        public delegate void VertexAttribI4iv(uint index, int[] v);
        public delegate void VertexAttribI4uiv(uint index, uint[] v);
        public delegate void VertexAttribL1dv(uint index, double[] v);
        public delegate void VertexAttribL2dv(uint index, double[] v);
        public delegate void VertexAttribL3dv(uint index, double[] v);
        public delegate void VertexAttribL4dv(uint index, double[] v);
        public delegate void VertexAttribP1ui(uint index, VertexAttribPType type, bool normalized, uint value);
        public delegate void VertexAttribP2ui(uint index, VertexAttribPType type, bool normalized, uint value);
        public delegate void VertexAttribP3ui(uint index, VertexAttribPType type, bool normalized, uint value);
        public delegate void VertexAttribP4ui(uint index, VertexAttribPType type, bool normalized, uint value);
        public delegate void VertexAttribBinding(uint attribindex, uint bindingindex);
        public delegate void VertexArrayAttribBinding(uint vaobj, uint attribindex, uint bindingindex);
        public delegate void VertexAttribDivisor(uint index, uint divisor);
        public delegate void VertexAttribFormat(uint attribindex, int size, VertexAttribFormatEnum type, bool normalized, uint relativeoffset);
        public delegate void VertexAttribIFormat(uint attribindex, int size, VertexAttribFormatEnum type, uint relativeoffset);
        public delegate void VertexAttribLFormat(uint attribindex, int size, VertexAttribFormatEnum type, uint relativeoffset);
        public delegate void VertexArrayAttribFormat(uint vaobj, uint attribindex, int size, VertexAttribFormatEnum type, bool normalized, uint relativeoffset);
        public delegate void VertexArrayAttribIFormat(uint vaobj, uint attribindex, int size, VertexAttribFormatEnum type, uint relativeoffset);
        public delegate void VertexArrayAttribLFormat(uint vaobj, uint attribindex, int size, VertexAttribFormatEnum type, uint relativeoffset);
        public delegate void VertexAttribPointer(uint index, int size, VertexAttribPointerType type, bool normalized, int stride, IntPtr pointer);
        public delegate void VertexAttribIPointer(uint index, int size, VertexAttribPointerType type, int stride, IntPtr pointer);
        public delegate void VertexAttribLPointer(uint index, int size, VertexAttribPointerType type, int stride, IntPtr pointer);
        public delegate void VertexBindingDivisor(uint bindingindex, uint divisor);
        public delegate void VertexArrayBindingDivisor(uint vaobj, uint bindingindex, uint divisor);
        public delegate void Viewport(int x, int y, int width, int height);
        public delegate void ViewportArrayv(uint first, int count, float[] v);
        public delegate void ViewportIndexedf(uint index, float x, float y, float w, float h);
        public delegate void ViewportIndexedfv(uint index, float[] v);
        public delegate void WaitSync(IntPtr sync, uint flags, ulong timeout);

        public static ActiveShaderProgram glActiveShaderProgram;
        public static ActiveTexture glActiveTexture;
        public static AttachShader glAttachShader;
        public static BeginConditionalRender glBeginConditionalRender;
        public static EndConditionalRender glEndConditionalRender;
        public static BeginQuery glBeginQuery;
        public static EndQuery glEndQuery;
        public static BeginQueryIndexed glBeginQueryIndexed;
        public static EndQueryIndexed glEndQueryIndexed;
        public static BeginTransformFeedback glBeginTransformFeedback;
        public static EndTransformFeedback glEndTransformFeedback;
        public static BindAttribLocation glBindAttribLocation;
        public static BindBuffer glBindBuffer;
        public static BindBufferBase glBindBufferBase;
        public static BindBufferRange glBindBufferRange;
        public static BindBuffersBase glBindBuffersBase;
        public static BindBuffersRange glBindBuffersRange;
        public static BindFragDataLocation glBindFragDataLocation;
        public static BindFragDataLocationIndexed glBindFragDataLocationIndexed;
        public static BindFramebuffer glBindFramebuffer;
        public static BindImageTexture glBindImageTexture;
        public static BindImageTextures glBindImageTextures;
        public static BindProgramPipeline glBindProgramPipeline;
        public static BindRenderbuffer glBindRenderbuffer;
        public static BindSampler glBindSampler;
        public static BindSamplers glBindSamplers;
        public static BindTexture glBindTexture;
        public static BindTextures glBindTextures;
        public static BindTextureUnit glBindTextureUnit;
        public static BindTransformFeedback glBindTransformFeedback;
        public static BindVertexArray glBindVertexArray;
        public static BindVertexBuffer glBindVertexBuffer;
        public static VertexArrayVertexBuffer glVertexArrayVertexBuffer;
        public static BindVertexBuffers glBindVertexBuffers;
        public static VertexArrayVertexBuffers glVertexArrayVertexBuffers;
        public static BlendColor glBlendColor;
        public static BlendEquation glBlendEquation;
        public static BlendEquationi glBlendEquationi;
        public static BlendEquationSeparate glBlendEquationSeparate;
        public static BlendEquationSeparatei glBlendEquationSeparatei;
        public static BlendFunc glBlendFunc;
        public static BlendFunci glBlendFunci;
        public static BlendFuncSeparate glBlendFuncSeparate;
        public static BlendFuncSeparatei glBlendFuncSeparatei;
        public static BlitFramebuffer glBlitFramebuffer;
        public static BlitNamedFramebuffer glBlitNamedFramebuffer;
        public static BufferData glBufferData;
        public static NamedBufferData glNamedBufferData;
        public static BufferStorage glBufferStorage;
        public static NamedBufferStorage glNamedBufferStorage;
        public static BufferSubData glBufferSubData;
        public static NamedBufferSubData glNamedBufferSubData;
        public static CheckFramebufferStatus glCheckFramebufferStatus;
        public static CheckNamedFramebufferStatus glCheckNamedFramebufferStatus;
        public static ClampColor glClampColor;
        public static Clear glClear;
        public static ClearBufferiv glClearBufferiv;
        public static ClearBufferuiv glClearBufferuiv;
        public static ClearBufferfv glClearBufferfv;
        public static ClearBufferfi glClearBufferfi;
        public static ClearNamedFramebufferiv glClearNamedFramebufferiv;
        public static ClearNamedFramebufferuiv glClearNamedFramebufferuiv;
        public static ClearNamedFramebufferfv glClearNamedFramebufferfv;
        public static ClearNamedFramebufferfi glClearNamedFramebufferfi;
        public static ClearBufferData glClearBufferData;
        public static ClearNamedBufferData glClearNamedBufferData;
        public static ClearBufferSubData glClearBufferSubData;
        public static ClearNamedBufferSubData glClearNamedBufferSubData;
        public static ClearColor glClearColor;
        public static ClearDepth glClearDepth;
        public static ClearDepthf glClearDepthf;
        public static ClearStencil glClearStencil;
        public static ClearTexImage glClearTexImage;
        public static ClearTexSubImage glClearTexSubImage;
        public static ClientWaitSync glClientWaitSync;
        public static ClipControl glClipControl;
        public static ColorMask glColorMask;
        public static ColorMaski glColorMaski;
        public static CompileShader glCompileShader;
        public static CompressedTexImage1D glCompressedTexImage1D;
        public static CompressedTexImage2D glCompressedTexImage2D;
        public static CompressedTexImage3D glCompressedTexImage3D;
        public static CompressedTexSubImage1D glCompressedTexSubImage1D;
        public static CompressedTextureSubImage1D glCompressedTextureSubImage1D;
        public static CompressedTexSubImage2D glCompressedTexSubImage2D;
        public static CompressedTextureSubImage2D glCompressedTextureSubImage2D;
        public static CompressedTexSubImage3D glCompressedTexSubImage3D;
        public static CompressedTextureSubImage3D glCompressedTextureSubImage3D;
        public static CopyBufferSubData glCopyBufferSubData;
        public static CopyNamedBufferSubData glCopyNamedBufferSubData;
        public static CopyImageSubData glCopyImageSubData;
        public static CopyTexImage1D glCopyTexImage1D;
        public static CopyTexImage2D glCopyTexImage2D;
        public static CopyTexSubImage1D glCopyTexSubImage1D;
        public static CopyTextureSubImage1D glCopyTextureSubImage1D;
        public static CopyTexSubImage2D glCopyTexSubImage2D;
        public static CopyTextureSubImage2D glCopyTextureSubImage2D;
        public static CopyTexSubImage3D glCopyTexSubImage3D;
        public static CopyTextureSubImage3D glCopyTextureSubImage3D;
        public static CreateBuffers glCreateBuffers;
        public static CreateFramebuffers glCreateFramebuffers;
        public static CreateProgram glCreateProgram;
        public static CreateProgramPipelines glCreateProgramPipelines;
        public static CreateQueries glCreateQueries;
        public static CreateRenderbuffers glCreateRenderbuffers;
        public static CreateSamplers glCreateSamplers;
        public static CreateShader glCreateShader;
        public static CreateShaderProgramv glCreateShaderProgramv;
        public static CreateTextures glCreateTextures;
        public static CreateTransformFeedbacks glCreateTransformFeedbacks;
        public static CreateVertexArrays glCreateVertexArrays;
        public static CullFace glCullFace;
        public static DeleteBuffers glDeleteBuffers;
        public static DeleteFramebuffers glDeleteFramebuffers;
        public static DeleteProgram glDeleteProgram;
        public static DeleteProgramPipelines glDeleteProgramPipelines;
        public static DeleteQueries glDeleteQueries;
        public static DeleteRenderbuffers glDeleteRenderbuffers;
        public static DeleteSamplers glDeleteSamplers;
        public static DeleteShader glDeleteShader;
        public static DeleteSync glDeleteSync;
        public static DeleteTextures glDeleteTextures;
        public static DeleteTransformFeedbacks glDeleteTransformFeedbacks;
        public static DeleteVertexArrays glDeleteVertexArrays;
        public static DepthFunc glDepthFunc;
        public static DepthMask glDepthMask;
        public static DepthRange glDepthRange;
        public static DepthRangef glDepthRangef;
        public static DepthRangeArrayv glDepthRangeArrayv;
        public static DepthRangeIndexed glDepthRangeIndexed;
        public static DetachShader glDetachShader;
        public static DispatchCompute glDispatchCompute;
        public static DispatchComputeIndirect glDispatchComputeIndirect;
        public static DrawArrays glDrawArrays;
        public static DrawArraysIndirect glDrawArraysIndirect;
        public static DrawArraysInstanced glDrawArraysInstanced;
        public static DrawArraysInstancedBaseInstance glDrawArraysInstancedBaseInstance;
        public static DrawBuffer glDrawBuffer;
        public static NamedFramebufferDrawBuffer glNamedFramebufferDrawBuffer;
        public static DrawBuffers glDrawBuffers;
        public static NamedFramebufferDrawBuffers glNamedFramebufferDrawBuffers;
        public static DrawElements glDrawElements;
        public static DrawElementsBaseVertex glDrawElementsBaseVertex;
        public static DrawElementsIndirect glDrawElementsIndirect;
        public static DrawElementsInstanced glDrawElementsInstanced;
        public static DrawElementsInstancedBaseInstance glDrawElementsInstancedBaseInstance;
        public static DrawElementsInstancedBaseVertex glDrawElementsInstancedBaseVertex;
        public static DrawElementsInstancedBaseVertexBaseInstance glDrawElementsInstancedBaseVertexBaseInstance;
        public static DrawRangeElements glDrawRangeElements;
        public static DrawRangeElementsBaseVertex glDrawRangeElementsBaseVertex;
        public static DrawTransformFeedback glDrawTransformFeedback;
        public static DrawTransformFeedbackInstanced glDrawTransformFeedbackInstanced;
        public static DrawTransformFeedbackStream glDrawTransformFeedbackStream;
        public static DrawTransformFeedbackStreamInstanced glDrawTransformFeedbackStreamInstanced;
        public static Enable glEnable;
        public static Disable glDisable;
        public static Enablei glEnablei;
        public static Disablei glDisablei;
        public static EnableVertexAttribArray glEnableVertexAttribArray;
        public static DisableVertexAttribArray glDisableVertexAttribArray;
        public static EnableVertexArrayAttrib glEnableVertexArrayAttrib;
        public static DisableVertexArrayAttrib glDisableVertexArrayAttrib;
        public static FenceSync glFenceSync;
        public static Finish glFinish;
        public static Flush glFlush;
        public static FlushMappedBufferRange glFlushMappedBufferRange;
        public static FlushMappedNamedBufferRange glFlushMappedNamedBufferRange;
        public static FramebufferParameteri glFramebufferParameteri;
        public static NamedFramebufferParameteri glNamedFramebufferParameteri;
        public static FramebufferRenderbuffer glFramebufferRenderbuffer;
        public static NamedFramebufferRenderbuffer glNamedFramebufferRenderbuffer;
        public static FramebufferTexture glFramebufferTexture;
        public static FramebufferTexture1D glFramebufferTexture1D;
        public static FramebufferTexture2D glFramebufferTexture2D;
        public static FramebufferTexture3D glFramebufferTexture3D;
        public static NamedFramebufferTexture glNamedFramebufferTexture;
        public static FramebufferTextureLayer glFramebufferTextureLayer;
        public static NamedFramebufferTextureLayer glNamedFramebufferTextureLayer;
        public static FrontFace glFrontFace;
        public static GenBuffers glGenBuffers;
        public static GenerateMipmap glGenerateMipmap;
        public static GenerateTextureMipmap glGenerateTextureMipmap;
        public static GenFramebuffers glGenFramebuffers;
        public static GenProgramPipelines glGenProgramPipelines;
        public static GenQueries glGenQueries;
        public static GenRenderbuffers glGenRenderbuffers;
        public static GenSamplers glGenSamplers;
        public static GenTextures glGenTextures;
        public static GenTransformFeedbacks glGenTransformFeedbacks;
        public static GenVertexArrays glGenVertexArrays;
        public static Getboolv glGetboolv;
        public static Getdoublev glGetdoublev;
        public static GetFloatv glGetFloatv;
        public static GetIntegerv glGetIntegerv;
        public static GetInteger64v glGetInteger64v;
        public static Getbooli_v glGetbooli_v;
        public static GetIntegeri_v glGetIntegeri_v;
        public static GetFloati_v glGetFloati_v;
        public static Getdoublei_v glGetdoublei_v;
        public static GetInteger64i_v glGetInteger64i_v;
        public static GetActiveAtomicCounterBufferiv glGetActiveAtomicCounterBufferiv;
        public static GetActiveAttrib glGetActiveAttrib;
        public static GetActiveSubroutineName glGetActiveSubroutineName;
        public static GetActiveSubroutineUniformiv glGetActiveSubroutineUniformiv;
        public static GetActiveSubroutineUniformName glGetActiveSubroutineUniformName;
        public static GetActiveUniform glGetActiveUniform;
        public static GetActiveUniformBlockiv glGetActiveUniformBlockiv;
        public static GetActiveUniformBlockName glGetActiveUniformBlockName;
        public static GetActiveUniformName glGetActiveUniformName;
        public static GetActiveUniformsiv glGetActiveUniformsiv;
        public static GetAttachedShaders glGetAttachedShaders;
        public static GetAttribLocation glGetAttribLocation;
        public static GetBufferParameteriv glGetBufferParameteriv;
        public static GetBufferParameteri64v glGetBufferParameteri64v;
        public static GetNamedBufferParameteriv glGetNamedBufferParameteriv;
        public static GetNamedBufferParameteri64v glGetNamedBufferParameteri64v;
        public static GetBufferPointerv glGetBufferPointerv;
        public static GetNamedBufferPointerv glGetNamedBufferPointerv;
        public static GetBufferSubData glGetBufferSubData;
        public static GetNamedBufferSubData glGetNamedBufferSubData;
        public static GetCompressedTexImage glGetCompressedTexImage;
        public static GetnCompressedTexImage glGetnCompressedTexImage;
        public static GetCompressedTextureImage glGetCompressedTextureImage;
        public static GetCompressedTextureSubImage glGetCompressedTextureSubImage;
        public static GetError glGetError;
        public static GetFragDataIndex glGetFragDataIndex;
        public static GetFragDataLocation glGetFragDataLocation;
        public static GetFramebufferAttachmentParameteriv glGetFramebufferAttachmentParameteriv;
        public static GetNamedFramebufferAttachmentParameteriv glGetNamedFramebufferAttachmentParameteriv;
        public static GetFramebufferParameteriv glGetFramebufferParameteriv;
        public static GetNamedFramebufferParameteriv glGetNamedFramebufferParameteriv;
        public static GetGraphicsResetStatus glGetGraphicsResetStatus;
        public static GetInternalformativ glGetInternalformativ;
        public static GetInternalformati64v glGetInternalformati64v;
        public static GetMultisamplefv glGetMultisamplefv;
        public static GetObjectLabel glGetObjectLabel;
        public static GetObjectPtrLabel glGetObjectPtrLabel;
        public static GetPointerv glGetPointerv;
        public static GetProgramiv glGetProgramiv;
        public static GetProgramBinary glGetProgramBinary;
        public static GetProgramInfoLog glGetProgramInfoLog;
        public static GetProgramInterfaceiv glGetProgramInterfaceiv;
        public static GetProgramPipelineiv glGetProgramPipelineiv;
        public static GetProgramPipelineInfoLog glGetProgramPipelineInfoLog;
        public static GetProgramResourceiv glGetProgramResourceiv;
        public static GetProgramResourceIndex glGetProgramResourceIndex;
        public static GetProgramResourceLocation glGetProgramResourceLocation;
        public static GetProgramResourceLocationIndex glGetProgramResourceLocationIndex;
        public static GetProgramResourceName glGetProgramResourceName;
        public static GetProgramStageiv glGetProgramStageiv;
        public static GetQueryIndexediv glGetQueryIndexediv;
        public static GetQueryiv glGetQueryiv;
        public static GetQueryObjectiv glGetQueryObjectiv;
        public static GetQueryObjectuiv glGetQueryObjectuiv;
        public static GetQueryObjecti64v glGetQueryObjecti64v;
        public static GetQueryObjectui64v glGetQueryObjectui64v;
        public static GetRenderbufferParameteriv glGetRenderbufferParameteriv;
        public static GetNamedRenderbufferParameteriv glGetNamedRenderbufferParameteriv;
        public static GetSamplerParameterfv glGetSamplerParameterfv;
        public static GetSamplerParameteriv glGetSamplerParameteriv;
        public static GetSamplerParameterIiv glGetSamplerParameterIiv;
        public static GetSamplerParameterIuiv glGetSamplerParameterIuiv;
        public static GetShaderiv glGetShaderiv;
        public static GetShaderInfoLog glGetShaderInfoLog;
        public static GetShaderPrecisionFormat glGetShaderPrecisionFormat;
        public static GetShaderSource glGetShaderSource;
        public static GetString glGetString;
        public static GetStringi glGetStringi;
        public static GetSubroutineIndex glGetSubroutineIndex;
        public static GetSubroutineUniformLocation glGetSubroutineUniformLocation;
        public static GetSynciv glGetSynciv;
        public static GetTexImage glGetTexImage;
        public static GetnTexImage glGetnTexImage;
        public static GetTextureImage glGetTextureImage;
        public static GetTexLevelParameterfv glGetTexLevelParameterfv;
        public static GetTexLevelParameteriv glGetTexLevelParameteriv;
        public static GetTextureLevelParameterfv glGetTextureLevelParameterfv;
        public static GetTextureLevelParameteriv glGetTextureLevelParameteriv;
        public static GetTexParameterfv glGetTexParameterfv;
        public static GetTexParameteriv glGetTexParameteriv;
        public static GetTexParameterIiv glGetTexParameterIiv;
        public static GetTexParameterIuiv glGetTexParameterIuiv;
        public static GetTextureParameterfv glGetTextureParameterfv;
        public static GetTextureParameteriv glGetTextureParameteriv;
        public static GetTextureParameterIiv glGetTextureParameterIiv;
        public static GetTextureParameterIuiv glGetTextureParameterIuiv;
        public static GetTextureSubImage glGetTextureSubImage;
        public static GetTransformFeedbackiv glGetTransformFeedbackiv;
        public static GetTransformFeedbacki_v glGetTransformFeedbacki_v;
        public static GetTransformFeedbacki64_v glGetTransformFeedbacki64_v;
        public static GetTransformFeedbackVarying glGetTransformFeedbackVarying;
        public static GetUniformfv glGetUniformfv;
        public static GetUniformiv glGetUniformiv;
        public static GetUniformuiv glGetUniformuiv;
        public static GetUniformdv glGetUniformdv;
        public static GetnUniformfv glGetnUniformfv;
        public static GetnUniformiv glGetnUniformiv;
        public static GetnUniformuiv glGetnUniformuiv;
        public static GetnUniformdv glGetnUniformdv;
        public static GetUniformBlockIndex glGetUniformBlockIndex;
        public static GetUniformIndices glGetUniformIndices;
        public static GetUniformLocation glGetUniformLocation;
        public static GetUniformSubroutineuiv glGetUniformSubroutineuiv;
        public static GetVertexArrayIndexed64iv glGetVertexArrayIndexed64iv;
        public static GetVertexArrayIndexediv glGetVertexArrayIndexediv;
        public static GetVertexArrayiv glGetVertexArrayiv;
        public static GetVertexAttribdv glGetVertexAttribdv;
        public static GetVertexAttribfv glGetVertexAttribfv;
        public static GetVertexAttribiv glGetVertexAttribiv;
        public static GetVertexAttribIiv glGetVertexAttribIiv;
        public static GetVertexAttribIuiv glGetVertexAttribIuiv;
        public static GetVertexAttribLdv glGetVertexAttribLdv;
        public static GetVertexAttribPointerv glGetVertexAttribPointerv;
        public static Hint glHint;
        public static InvalidateBufferData glInvalidateBufferData;
        public static InvalidateBufferSubData glInvalidateBufferSubData;
        public static InvalidateFramebuffer glInvalidateFramebuffer;
        public static InvalidateNamedFramebufferData glInvalidateNamedFramebufferData;
        public static InvalidateSubFramebuffer glInvalidateSubFramebuffer;
        public static InvalidateNamedFramebufferSubData glInvalidateNamedFramebufferSubData;
        public static InvalidateTexImage glInvalidateTexImage;
        public static InvalidateTexSubImage glInvalidateTexSubImage;
        public static IsBuffer glIsBuffer;
        public static IsEnabled glIsEnabled;
        public static IsEnabledi glIsEnabledi;
        public static IsFramebuffer glIsFramebuffer;
        public static IsProgram glIsProgram;
        public static IsProgramPipeline glIsProgramPipeline;
        public static IsQuery glIsQuery;
        public static IsRenderbuffer glIsRenderbuffer;
        public static IsSampler glIsSampler;
        public static IsShader glIsShader;
        public static IsSync glIsSync;
        public static IsTexture glIsTexture;
        public static IsTransformFeedback glIsTransformFeedback;
        public static IsVertexArray glIsVertexArray;
        public static LineWidth glLineWidth;
        public static LinkProgram glLinkProgram;
        public static LogicOp glLogicOp;
        public static MapBuffer glMapBuffer;
        public static MapNamedBuffer glMapNamedBuffer;
        public static MapBufferRange glMapBufferRange;
        public static MapNamedBufferRange glMapNamedBufferRange;
        public static MemoryBarrier glMemoryBarrier;
        public static MemoryBarrierByRegion glMemoryBarrierByRegion;
        public static MinSampleShading glMinSampleShading;
        public static MultiDrawArrays glMultiDrawArrays;
        public static MultiDrawArraysIndirect glMultiDrawArraysIndirect;
        public static MultiDrawElements glMultiDrawElements;
        public static MultiDrawElementsBaseVertex glMultiDrawElementsBaseVertex;
        public static MultiDrawElementsIndirect glMultiDrawElementsIndirect;
        public static ObjectLabel glObjectLabel;
        public static ObjectPtrLabel glObjectPtrLabel;
        public static PatchParameteri glPatchParameteri;
        public static PatchParameterfv glPatchParameterfv;
        public static PixelStoref glPixelStoref;
        public static PixelStorei glPixelStorei;
        public static PointParameterf glPointParameterf;
        public static PointParameteri glPointParameteri;
        public static PointParameterfv glPointParameterfv;
        public static PointParameteriv glPointParameteriv;
        public static PointSize glPointSize;
        public static PolygonMode glPolygonMode;
        public static PolygonOffset glPolygonOffset;
        public static PrimitiveRestartIndex glPrimitiveRestartIndex;
        public static ProgramBinary glProgramBinary;
        public static ProgramParameteri glProgramParameteri;
        public static ProgramUniform1f glProgramUniform1f;
        public static ProgramUniform2f glProgramUniform2f;
        public static ProgramUniform3f glProgramUniform3f;
        public static ProgramUniform4f glProgramUniform4f;
        public static ProgramUniform1i glProgramUniform1i;
        public static ProgramUniform2i glProgramUniform2i;
        public static ProgramUniform3i glProgramUniform3i;
        public static ProgramUniform4i glProgramUniform4i;
        public static ProgramUniform1ui glProgramUniform1ui;
        public static ProgramUniform2ui glProgramUniform2ui;
        public static ProgramUniform3ui glProgramUniform3ui;
        public static ProgramUniform4ui glProgramUniform4ui;
        public static ProgramUniform1fv glProgramUniform1fv;
        public static ProgramUniform2fv glProgramUniform2fv;
        public static ProgramUniform3fv glProgramUniform3fv;
        public static ProgramUniform4fv glProgramUniform4fv;
        public static ProgramUniform1iv glProgramUniform1iv;
        public static ProgramUniform2iv glProgramUniform2iv;
        public static ProgramUniform3iv glProgramUniform3iv;
        public static ProgramUniform4iv glProgramUniform4iv;
        public static ProgramUniform1uiv glProgramUniform1uiv;
        public static ProgramUniform2uiv glProgramUniform2uiv;
        public static ProgramUniform3uiv glProgramUniform3uiv;
        public static ProgramUniform4uiv glProgramUniform4uiv;
        public static ProgramUniformMatrix2fv glProgramUniformMatrix2fv;
        public static ProgramUniformMatrix3fv glProgramUniformMatrix3fv;
        public static ProgramUniformMatrix4fv glProgramUniformMatrix4fv;
        public static ProgramUniformMatrix2x3fv glProgramUniformMatrix2x3fv;
        public static ProgramUniformMatrix3x2fv glProgramUniformMatrix3x2fv;
        public static ProgramUniformMatrix2x4fv glProgramUniformMatrix2x4fv;
        public static ProgramUniformMatrix4x2fv glProgramUniformMatrix4x2fv;
        public static ProgramUniformMatrix3x4fv glProgramUniformMatrix3x4fv;
        public static ProgramUniformMatrix4x3fv glProgramUniformMatrix4x3fv;
        public static ProvokingVertex glProvokingVertex;
        public static QueryCounter glQueryCounter;
        public static ReadBuffer glReadBuffer;
        public static NamedFramebufferReadBuffer glNamedFramebufferReadBuffer;
        public static ReadPixels glReadPixels;
        public static ReadnPixels glReadnPixels;
        public static RenderbufferStorage glRenderbufferStorage;
        public static NamedRenderbufferStorage glNamedRenderbufferStorage;
        public static RenderbufferStorageMultisample glRenderbufferStorageMultisample;
        public static NamedRenderbufferStorageMultisample glNamedRenderbufferStorageMultisample;
        public static SampleCoverage glSampleCoverage;
        public static SampleMaski glSampleMaski;
        public static SamplerParameterf glSamplerParameterf;
        public static SamplerParameteri glSamplerParameteri;
        public static SamplerParameterfv glSamplerParameterfv;
        public static SamplerParameteriv glSamplerParameteriv;
        public static SamplerParameterIiv glSamplerParameterIiv;
        public static SamplerParameterIuiv glSamplerParameterIuiv;
        public static Scissor glScissor;
        public static ScissorArrayv glScissorArrayv;
        public static ScissorIndexed glScissorIndexed;
        public static ScissorIndexedv glScissorIndexedv;
        public static ShaderBinary glShaderBinary;
        public static ShaderSource glShaderSource;
        public static ShaderStorageBlockBinding glShaderStorageBlockBinding;
        public static StencilFunc glStencilFunc;
        public static StencilFuncSeparate glStencilFuncSeparate;
        public static StencilMask glStencilMask;
        public static StencilMaskSeparate glStencilMaskSeparate;
        public static StencilOp glStencilOp;
        public static StencilOpSeparate glStencilOpSeparate;
        public static TexBuffer glTexBuffer;
        public static TextureBuffer glTextureBuffer;
        public static TexBufferRange glTexBufferRange;
        public static TextureBufferRange glTextureBufferRange;
        public static TexImage1D glTexImage1D;
        public static TexImage2D glTexImage2D;
        public static TexImage2DMultisample glTexImage2DMultisample;
        public static TexImage3D glTexImage3D;
        public static TexImage3DMultisample glTexImage3DMultisample;
        public static TexParameterf glTexParameterf;
        public static TexParameteri glTexParameteri;
        public static TextureParameterf glTextureParameterf;
        public static TextureParameteri glTextureParameteri;
        public static TexParameterfv glTexParameterfv;
        public static TexParameteriv glTexParameteriv;
        public static TexParameterIiv glTexParameterIiv;
        public static TexParameterIuiv glTexParameterIuiv;
        public static TextureParameterfv glTextureParameterfv;
        public static TextureParameteriv glTextureParameteriv;
        public static TextureParameterIiv glTextureParameterIiv;
        public static TextureParameterIuiv glTextureParameterIuiv;
        public static TexStorage1D glTexStorage1D;
        public static TextureStorage1D glTextureStorage1D;
        public static TexStorage2D glTexStorage2D;
        public static TextureStorage2D glTextureStorage2D;
        public static TexStorage2DMultisample glTexStorage2DMultisample;
        public static TextureStorage2DMultisample glTextureStorage2DMultisample;
        public static TexStorage3D glTexStorage3D;
        public static TextureStorage3D glTextureStorage3D;
        public static TexStorage3DMultisample glTexStorage3DMultisample;
        public static TextureStorage3DMultisample glTextureStorage3DMultisample;
        public static TexSubImage1D glTexSubImage1D;
        public static TextureSubImage1D glTextureSubImage1D;
        public static TexSubImage2D glTexSubImage2D;
        public static TextureSubImage2D glTextureSubImage2D;
        public static TexSubImage3D glTexSubImage3D;
        public static TextureSubImage3D glTextureSubImage3D;
        public static TextureBarrier glTextureBarrier;
        public static TextureView glTextureView;
        public static TransformFeedbackBufferBase glTransformFeedbackBufferBase;
        public static TransformFeedbackBufferRange glTransformFeedbackBufferRange;
        public static TransformFeedbackVaryings glTransformFeedbackVaryings;
        public static Uniform1f glUniform1f;
        public static Uniform2f glUniform2f;
        public static Uniform3f glUniform3f;
        public static Uniform4f glUniform4f;
        public static Uniform1i glUniform1i;
        public static Uniform2i glUniform2i;
        public static Uniform3i glUniform3i;
        public static Uniform4i glUniform4i;
        public static Uniform1ui glUniform1ui;
        public static Uniform2ui glUniform2ui;
        public static Uniform3ui glUniform3ui;
        public static Uniform4ui glUniform4ui;
        public static Uniform1fv glUniform1fv;
        public static Uniform2fv glUniform2fv;
        public static Uniform3fv glUniform3fv;
        public static Uniform4fv glUniform4fv;
        public static Uniform1iv glUniform1iv;
        public static Uniform2iv glUniform2iv;
        public static Uniform3iv glUniform3iv;
        public static Uniform4iv glUniform4iv;
        public static Uniform1uiv glUniform1uiv;
        public static Uniform2uiv glUniform2uiv;
        public static Uniform3uiv glUniform3uiv;
        public static Uniform4uiv glUniform4uiv;
        public static UniformMatrix2fv glUniformMatrix2fv;
        public static UniformMatrix3fv glUniformMatrix3fv;
        public static UniformMatrix4fv glUniformMatrix4fv;
        public static UniformMatrix2x3fv glUniformMatrix2x3fv;
        public static UniformMatrix3x2fv glUniformMatrix3x2fv;
        public static UniformMatrix2x4fv glUniformMatrix2x4fv;
        public static UniformMatrix4x2fv glUniformMatrix4x2fv;
        public static UniformMatrix3x4fv glUniformMatrix3x4fv;
        public static UniformMatrix4x3fv glUniformMatrix4x3fv;
        public static UniformBlockBinding glUniformBlockBinding;
        public static UniformSubroutinesuiv glUniformSubroutinesuiv;
        public static UnmapBuffer glUnmapBuffer;
        public static UnmapNamedBuffer glUnmapNamedBuffer;
        public static UseProgram glUseProgram;
        public static UseProgramStages glUseProgramStages;
        public static ValidateProgram glValidateProgram;
        public static ValidateProgramPipeline glValidateProgramPipeline;
        public static VertexArrayElementBuffer glVertexArrayElementBuffer;
        public static VertexAttrib1f glVertexAttrib1f;
        public static VertexAttrib1s glVertexAttrib1s;
        public static VertexAttrib1d glVertexAttrib1d;
        public static VertexAttribI1i glVertexAttribI1i;
        public static VertexAttribI1ui glVertexAttribI1ui;
        public static VertexAttrib2f glVertexAttrib2f;
        public static VertexAttrib2s glVertexAttrib2s;
        public static VertexAttrib2d glVertexAttrib2d;
        public static VertexAttribI2i glVertexAttribI2i;
        public static VertexAttribI2ui glVertexAttribI2ui;
        public static VertexAttrib3f glVertexAttrib3f;
        public static VertexAttrib3s glVertexAttrib3s;
        public static VertexAttrib3d glVertexAttrib3d;
        public static VertexAttribI3i glVertexAttribI3i;
        public static VertexAttribI3ui glVertexAttribI3ui;
        public static VertexAttrib4f glVertexAttrib4f;
        public static VertexAttrib4s glVertexAttrib4s;
        public static VertexAttrib4d glVertexAttrib4d;
        public static VertexAttrib4Nub glVertexAttrib4Nub;
        public static VertexAttribI4i glVertexAttribI4i;
        public static VertexAttribI4ui glVertexAttribI4ui;
        public static VertexAttribL1d glVertexAttribL1d;
        public static VertexAttribL2d glVertexAttribL2d;
        public static VertexAttribL3d glVertexAttribL3d;
        public static VertexAttribL4d glVertexAttribL4d;
        public static VertexAttrib1fv glVertexAttrib1fv;
        public static VertexAttrib1sv glVertexAttrib1sv;
        public static VertexAttrib1dv glVertexAttrib1dv;
        public static VertexAttribI1iv glVertexAttribI1iv;
        public static VertexAttribI1uiv glVertexAttribI1uiv;
        public static VertexAttrib2fv glVertexAttrib2fv;
        public static VertexAttrib2sv glVertexAttrib2sv;
        public static VertexAttrib2dv glVertexAttrib2dv;
        public static VertexAttribI2iv glVertexAttribI2iv;
        public static VertexAttribI2uiv glVertexAttribI2uiv;
        public static VertexAttrib3fv glVertexAttrib3fv;
        public static VertexAttrib3sv glVertexAttrib3sv;
        public static VertexAttrib3dv glVertexAttrib3dv;
        public static VertexAttribI3iv glVertexAttribI3iv;
        public static VertexAttribI3uiv glVertexAttribI3uiv;
        public static VertexAttrib4fv glVertexAttrib4fv;
        public static VertexAttrib4sv glVertexAttrib4sv;
        public static VertexAttrib4dv glVertexAttrib4dv;
        public static VertexAttrib4iv glVertexAttrib4iv;
        public static VertexAttrib4bv glVertexAttrib4bv;
        public static VertexAttrib4ubv glVertexAttrib4ubv;
        public static VertexAttrib4usv glVertexAttrib4usv;
        public static VertexAttrib4uiv glVertexAttrib4uiv;
        public static VertexAttrib4Nbv glVertexAttrib4Nbv;
        public static VertexAttrib4Nsv glVertexAttrib4Nsv;
        public static VertexAttrib4Niv glVertexAttrib4Niv;
        public static VertexAttrib4Nubv glVertexAttrib4Nubv;
        public static VertexAttrib4Nusv glVertexAttrib4Nusv;
        public static VertexAttrib4Nuiv glVertexAttrib4Nuiv;
        public static VertexAttribI4bv glVertexAttribI4bv;
        public static VertexAttribI4ubv glVertexAttribI4ubv;
        public static VertexAttribI4sv glVertexAttribI4sv;
        public static VertexAttribI4usv glVertexAttribI4usv;
        public static VertexAttribI4iv glVertexAttribI4iv;
        public static VertexAttribI4uiv glVertexAttribI4uiv;
        public static VertexAttribL1dv glVertexAttribL1dv;
        public static VertexAttribL2dv glVertexAttribL2dv;
        public static VertexAttribL3dv glVertexAttribL3dv;
        public static VertexAttribL4dv glVertexAttribL4dv;
        public static VertexAttribP1ui glVertexAttribP1ui;
        public static VertexAttribP2ui glVertexAttribP2ui;
        public static VertexAttribP3ui glVertexAttribP3ui;
        public static VertexAttribP4ui glVertexAttribP4ui;
        public static VertexAttribBinding glVertexAttribBinding;
        public static VertexArrayAttribBinding glVertexArrayAttribBinding;
        public static VertexAttribDivisor glVertexAttribDivisor;
        public static VertexAttribFormat glVertexAttribFormat;
        public static VertexAttribIFormat glVertexAttribIFormat;
        public static VertexAttribLFormat glVertexAttribLFormat;
        public static VertexArrayAttribFormat glVertexArrayAttribFormat;
        public static VertexArrayAttribIFormat glVertexArrayAttribIFormat;
        public static VertexArrayAttribLFormat glVertexArrayAttribLFormat;
        public static VertexAttribPointer glVertexAttribPointer;
        public static VertexAttribIPointer glVertexAttribIPointer;
        public static VertexAttribLPointer glVertexAttribLPointer;
        public static VertexBindingDivisor glVertexBindingDivisor;
        public static VertexArrayBindingDivisor glVertexArrayBindingDivisor;
        public static Viewport glViewport;
        public static ViewportArrayv glViewportArrayv;
        public static ViewportIndexedf glViewportIndexedf;
        public static ViewportIndexedfv glViewportIndexedfv;
        public static WaitSync glWaitSync;
    }
}